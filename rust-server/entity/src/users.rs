//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.6

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(
    Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize,
)]
#[sea_orm(table_name = "users")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    pub email: String,
    pub username: String,
    pub password: String,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl Related<super::auth_scopes::Entity> for Entity {
    fn to() -> RelationDef {
        super::users_auth_scopes::Relation::AuthScopes.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::users_auth_scopes::Relation::Users.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
